 List<List<Integer>> ans = new ArrayList<>();
        for (int[] interval : intervals) {
            if (interval[0] >= toBeRemoved[0] && interval[1] < toBeRemoved[1]) {
                continue;
            }
            if (interval[1] < toBeRemoved[0] || interval[0] >= toBeRemoved[1]) {
                ans.add(Arrays.asList(interval[0], interval[1]));
            } else if (interval[0] < toBeRemoved[0] && interval[1] > toBeRemoved[1]) {
                ans.add(Arrays.asList(interval[0], toBeRemoved[0]));
                ans.add(Arrays.asList(toBeRemoved[1], interval[1]));
            } else if (interval[0] < toBeRemoved[0]) {
                ans.add(Arrays.asList(interval[0], toBeRemoved[0]));
            } else if (interval[1] > toBeRemoved[1]) {
                ans.add(Arrays.asList(toBeRemoved[1], interval[1]));
            }
        }
        Collections.sort(ans, new Comparator<List<Integer>>(){
            @Override
            public int compare(List<Integer> a, List<Integer> b) {
                if (a.get(0) == b.get(0)) {
                    return a.get(1) - b.get(1);
                }
                return a.get(0) - b.get(0);
            }
        });
        return ans;
