 public List<Integer> minAvailableDuration(int[][] slots1, int[][] slots2, int duration) {
        List<int[]> list = new ArrayList<>();
        for (int[] s : slots1) {
            list.add(s);
        }
        for (int[] s : slots2) {
            list.add(s);
        }
        
        Collections.sort(list, (a, b)->(a[0] - b[0]));
        List<int[]> common = new ArrayList<>();
        int j = 0;
        for (int i = 1; i < list.size(); i++) {
            if (list.get(i)[0] <= list.get(i - 1)[1]) {
                common.add(new int[]{list.get(i)[0], Math.min(list.get(i)[1], list.get(i - 1)[1])});
            }
        }
        List<Integer> res = new ArrayList<>();
        for (int i = 0; i < common.size(); i++) {
            if (common.get(i)[0] + duration <= common.get(i)[1]) {
                res.add(common.get(i)[0]);
                res.add(common.get(i)[0] + duration);
                break;
            }
        }
        return res;
    }
